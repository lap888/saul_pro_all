{"version":3,"file":"static/js/882.c2a70f55.chunk.js","mappings":"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","sources":["http/http.js","http/api.js","pages/systemManage/showLogs.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  // 固定请求地址\n  // baseURL: 'http://36.255.223.210:30019/', // 可以改成你想要的地址\n  \n  baseURL: 'http://103.84.90.55:30019/', // 可以改成你想要的地址\n  // baseURL: 'http://127.0.0.1:30019/', // 可以改成你想要的地址\n  // 请求超时时间\n  timeout: 20000,\n  // 当前请求默认请求头\n  // header:{\n\n  // }\n});\n\n// 创建请求拦截\ninstance.interceptors.request.use(\n  (config) => {\n    // config.headers.token = '123';\n    return config;\n  },\n  (error) => {\n    // 错误抛到业务代码\n    error.data = {};\n    error.data.msg = '服务器异常，请联系管理员！';\n    return Promise.resolve(error);\n  }\n);\n\n// 创建响应拦截\ninstance.interceptors.response.use(\n  (res) => {\n    if (res.status === 200) {\n      return res;\n    }\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\n/* 统一封装get请求 */\nexport const get = (url, params, config = {}) => {\n  return new Promise((resolve, reject) => {\n    instance({\n      method: 'get',\n      url,\n      params,\n      ...config,\n    })\n      .then((response) => {\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n/* 统一封装post请求  */\nexport const post = (url, data, config = {}) => {\n  return new Promise((resolve, reject) => {\n    instance({\n      method: 'post',\n      url,\n      data,\n      ...config,\n    })\n      .then((response) => {\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n","import { get } from '@/http/http.js';\n\n/**\n * 获取配置文件\n * @param {*} params \n * @returns \n */\nexport const getConfig = (params) => get('api/config', params);\nexport const getConfigKey = (params) => get('api/configKey', params);\nexport const setConfigKey = (params) => get('api/setConfigKey', params);\nexport const coinDel = (params) => get('api/coin/del', params);\nexport const startOrStop = (params) => get('api/coin/startOrStop', params);\nexport const addOrUpdate = (params) => get('api/coin/addOrUpdate', params);\nexport const sellAll = (params) => get('api/coin/sellAll', params);\nexport const sellOne = (params) => get('api/coin/sellOne', params);\nexport const getPos = (params) => get('api/coin/getPos', params);\nexport const getOrders = (params) => get('api/coin/getOrders', params);\nexport const getLogs = (params) => get('api/logs', params);\nexport const delLogs = (params) => get('api/dlog', params);\nexport const getAccount = (params) => get('api/account', params);\n\n\n","import { useState, useEffect,useRef } from 'react';\nimport { Table, Modal, Button, notification, Space, Divider } from \"antd\";\nimport { getLogs, delLogs } from '@/http/api';\n\nfunction handleDelete(onSuccess) {\n  Modal.confirm({\n    title: '清空日志提示',\n    content: <p>确定清空日志 吗?</p>,\n    onOk: () => {\n      try {\n        delLogs().then(res => {\n          notification.open({\n            message: `消息通知`,\n            description: `清空日志=>${JSON.stringify(res.data)}`\n          });\n          onSuccess()\n        })\n      } catch (e) {\n        notification.open({\n          message: `消息通知`,\n          description: `清空日志=>${e}`\n        });\n      }\n    }\n  })\n}\nfunction ShowLogs() {\n  const columns = [\n    {\n      dataIndex: 'key', title: '编号', width: 80,\n      display: 'none'\n    },\n    {\n      dataIndex: 'logs', title: '日志内容', width: 500\n    },\n    {\n      dataIndex: 'time', title: '时间', width: 180\n    }\n\n  ]  \n  const [data, setData] = useState([])\n  const timerRef = useRef();\n  useEffect(() => {\n    getLogs().then(res => {\n      setData(res.data.data)\n      timerRef.current = setInterval(() => {\n        getLogs().then(res1 => {\n          setData(res1.data.data)\n        })\n      }, 2500);\n    })\n    return () => {\n      timerRef.current && clearInterval(timerRef.current)\n    }\n  }, [])\n  return (\n    <div>\n      <Divider>日志面板</Divider>\n      <div style={{ margin: \"15px 0\" }}>\n        <Space style={{ margin: 20 }}>\n          <Button type=\"primary\" onClick={() => {\n            handleDelete(() => {\n              getLogs().then(res => {\n                setData(res.data.data)\n              })\n            })\n          }}>\n            清空日志\n          </Button>\n        </Space>\n      </div>\n      <Divider></Divider>\n      <Table\n        scroll={{\n          x: window.innerWidth * 2 / 3,\n          y: window.innerHeight * 2 / 3,\n        }}\n        rowkey={(record) => record.primaryKey}\n        dataSource={data}\n        columns={columns} />\n    </div>\n  );\n}\n\nexport default ShowLogs;"],"names":["instance","axios","baseURL","timeout","interceptors","request","use","config","error","data","msg","Promise","resolve","response","res","status","err","reject","get","url","params","method","then","catch","getConfig","getConfigKey","setConfigKey","coinDel","startOrStop","addOrUpdate","sellAll","sellOne","getPos","getOrders","getLogs","delLogs","getAccount","useState","setData","timerRef","useRef","useEffect","current","setInterval","res1","clearInterval","style","margin","type","onClick","onSuccess","Modal","title","content","onOk","notification","message","description","JSON","stringify","e","scroll","x","window","innerWidth","y","innerHeight","rowkey","record","primaryKey","dataSource","columns","dataIndex","width","display"],"sourceRoot":""}