{"version":3,"file":"static/js/329.5251f0ac.chunk.js","mappings":"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","sources":["http/http.js","http/api.js","pages/systemManage/settingKey.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  // 固定请求地址\n  // baseURL: 'http://36.255.223.210:30019/', // 可以改成你想要的地址\n  \n  baseURL: 'http://103.84.90.55:30019/', // 可以改成你想要的地址\n  // baseURL: 'http://127.0.0.1:30019/', // 可以改成你想要的地址\n  // 请求超时时间\n  timeout: 20000,\n  // 当前请求默认请求头\n  // header:{\n\n  // }\n});\n\n// 创建请求拦截\ninstance.interceptors.request.use(\n  (config) => {\n    // config.headers.token = '123';\n    return config;\n  },\n  (error) => {\n    // 错误抛到业务代码\n    error.data = {};\n    error.data.msg = '服务器异常，请联系管理员！';\n    return Promise.resolve(error);\n  }\n);\n\n// 创建响应拦截\ninstance.interceptors.response.use(\n  (res) => {\n    if (res.status === 200) {\n      return res;\n    }\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\n/* 统一封装get请求 */\nexport const get = (url, params, config = {}) => {\n  return new Promise((resolve, reject) => {\n    instance({\n      method: 'get',\n      url,\n      params,\n      ...config,\n    })\n      .then((response) => {\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n/* 统一封装post请求  */\nexport const post = (url, data, config = {}) => {\n  return new Promise((resolve, reject) => {\n    instance({\n      method: 'post',\n      url,\n      data,\n      ...config,\n    })\n      .then((response) => {\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n","import { get } from '@/http/http.js';\n\n/**\n * 获取配置文件\n * @param {*} params \n * @returns \n */\nexport const getConfig = (params) => get('api/config', params);\nexport const getConfigKey = (params) => get('api/configKey', params);\nexport const setConfigKey = (params) => get('api/setConfigKey', params);\nexport const coinDel = (params) => get('api/coin/del', params);\nexport const startOrStop = (params) => get('api/coin/startOrStop', params);\nexport const addOrUpdate = (params) => get('api/coin/addOrUpdate', params);\nexport const sellAll = (params) => get('api/coin/sellAll', params);\nexport const sellOne = (params) => get('api/coin/sellOne', params);\nexport const getPos = (params) => get('api/coin/getPos', params);\nexport const getOrders = (params) => get('api/coin/getOrders', params);\nexport const getLogs = (params) => get('api/logs', params);\nexport const delLogs = (params) => get('api/dlog', params);\nexport const getAccount = (params) => get('api/account', params);\n\n\n","import { useEffect } from 'react';\nimport { Card, Input, Button, Form, Checkbox, notification, Divider, Modal } from \"antd\";\nimport { getConfigKey, setConfigKey } from '@/http/api';\n\nconst styles = {\n  bg: {\n    padding: 30,\n    background: '#ececec'\n  }\n}\n\nfunction SettingKey() {\n  const [form] = Form.useForm()\n  const [formProxy] = Form.useForm()\n  useEffect(() => {\n    //获取配置\n    getConfigKey().then(res => {\n      let record = res.data;\n      form.setFieldsValue({\n        apiKey: record?.apiKey,\n        apiSecret: record?.apiSecret\n      })\n      formProxy.setFieldsValue({\n        proxy: record?.proxy,\n        proxyIp: record?.proxyIp,\n        env: record?.env\n      })\n    })\n  }, [formProxy, form])\n  const handleSubmit = () => {\n\n\n    form.validateFields().then((values) => {\n      Modal.confirm({\n        title: '提示',\n        content: <p>您当前未成交的挂单不会被自动取消; 请确认当前api中的持仓情况,更换api后将不会再进行买入卖出操作</p>,\n        onOk: () => {\n          try {\n            setConfigKey({ apiKey: values.apiKey, apiSecret: values.apiSecret }).then(res => {\n              notification.open({\n                message: `消息通知`,\n                description: `保存成功${JSON.stringify(res.data)}`\n              });\n            })\n          } catch (e) {\n            notification.open({\n              message: `消息通知`,\n              description: `${e}`\n            });\n          }\n        }\n      })\n    })\n  }\n  const handleSubmitProxy = () => {\n    formProxy.validateFields().then((values) => {\n      console.log(values)\n      setConfigKey({ proxy: values.proxy, proxyIp: values.proxyIp, env: values.env }).then(res => {\n        notification.open({\n          message: `消息通知`,\n          description: `保存成功${JSON.stringify(res.data)}`\n        });\n      })\n    })\n  }\n  return (\n    <div style={styles.bg}>\n      <Divider>账户API配置</Divider>\n      <Card\n        title=\"币交易所配置参数\"\n        bordered={false}\n        style={{\n          width: '100%',\n        }}\n      >\n        <Form form={form}>\n          <Form.Item\n            name='apiKey'\n            rules={[\n              {\n                required: true,\n                message: 'apiKey is required',\n              },\n            ]}\n          >\n            <Input addonBefore=\"Access Key\" placeholder=\"Access Key\" allowClear={true} />\n          </Form.Item>\n\n          <Divider />\n          <Form.Item\n            name='apiSecret'\n            rules={[\n              {\n                required: true,\n                message: 'apiSecret is required',\n              },\n            ]}\n          >\n            <Input.Password addonBefore=\"Secret Key\" placeholder=\"Secret Key\" allowClear={true} autoComplete=\"off\" />\n          </Form.Item>\n          <Divider />\n          <Button type=\"primary\" onClick={handleSubmit}>保存</Button>\n        </Form>\n      </Card>\n      <Divider>代理VPN配置</Divider>\n      <Card\n        title=\"代理VPN配置参数\"\n        bordered={false}\n        style={{\n          width: '100%',\n        }}\n      >\n        <Form form={formProxy}>\n          <Form.Item\n            name='proxyIp'\n          >\n            <Input addonBefore=\"proxyIp\" placeholder=\"proxyIp\" allowClear={true} />\n          </Form.Item>\n          <Divider />\n          <Form.Item\n            name='proxy'\n          >\n            <Input addonBefore=\"proxy\" placeholder=\"proxy\" allowClear={true} />\n          </Form.Item>\n          <Form.Item\n            name='env'\n            valuePropName=\"checked\"\n          >\n            <Checkbox>启动</Checkbox>\n          </Form.Item>\n\n          <Divider />\n\n          <Button type=\"primary\" onClick={handleSubmitProxy}>保存</Button>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nexport default SettingKey;"],"names":["instance","axios","baseURL","timeout","interceptors","request","use","config","error","data","msg","Promise","resolve","response","res","status","err","reject","get","url","params","method","then","catch","getConfig","getConfigKey","setConfigKey","coinDel","startOrStop","addOrUpdate","sellAll","sellOne","getPos","getOrders","getLogs","delLogs","getAccount","styles","bg","padding","background","Form","form","formProxy","useEffect","record","setFieldsValue","apiKey","apiSecret","proxy","proxyIp","env","style","title","bordered","width","name","rules","required","message","addonBefore","placeholder","allowClear","autoComplete","type","onClick","validateFields","values","Modal","content","onOk","notification","description","JSON","stringify","e","valuePropName","console","log"],"sourceRoot":""}