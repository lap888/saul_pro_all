{"version":3,"file":"static/js/696.8ad7226c.chunk.js","mappings":"yKAGIA,EAAO,CACT,CAAEC,KAAM,cAAUC,MAAO,IACzB,CAAED,KAAM,cAAUC,MAAO,IACzB,CAAED,KAAM,cAAUC,MAAO,IACzB,CAAED,KAAM,cAAUC,MAAO,KACzB,CAAED,KAAM,cAAUC,MAAO,KAmC3B,IAAMC,EAAY,WAChB,IAAMC,EAAQ,CAAC,EAAG,EAAI,EAAG,EAAI,EAAG,GAC1BC,EAAQ,CAAC,UAAW,UAAW,WAC/BC,GAAWC,EAAAA,EAAAA,QAAO,OACxBC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAASG,QACX,IAAIT,EAAO,GACLU,EAAWC,aAAY,WACvBX,GAAQ,KACVY,cAAcF,GAGhBV,GAAQ,KACRM,EAASG,QAAQI,WAAWb,EAAO,EAAIA,EAAO,EAAIA,KACjD,OAEJ,CAACM,IACJ,IAAMQ,EAAS,CACbC,QAAS,EACTC,MAAO,CACLZ,MAAO,CAAC,EAAG,GACXC,MAAO,CAAC,yCAEVY,UAAW,CACTC,QAAS,CACPC,MAAO,CACLC,OAAQ,YAGZC,IAAK,CACHF,MAAO,CACLC,OAAQ,aAIdE,UAAW,CACTC,MAAO,CACLC,UAAW,YAAkB,IAAfT,EAAc,EAAdA,QACZ,OAAIA,EAAUX,EAAM,GACX,SAGLW,EAAUX,EAAM,GACX,SAGF,UAETe,MAAO,YAAkB,IAAfJ,EAAc,EAAdA,QACR,MAAO,CACLU,SAAU,OACVC,WAAY,EACZrB,MAAOU,EAAUX,EAAM,GAAKC,EAAM,GAAKU,EAAUX,EAAM,GAAKC,EAAM,GAAKA,EAAM,MAInFsB,QAAS,CACPC,QAAS,GACTT,MAAO,CACLM,SAAU,OACVpB,MAAO,WAETmB,UAAW,iBAAM,8BAGrBK,QAAS,SAACC,GACRxB,EAASG,QAAUqB,IAIvB,OAAO,SAAC,KAAD,UAAWhB,KAGpB,UA1GA,WAsBE,OArBAN,EAAAA,EAAAA,YAAU,WACR,IAAIuB,EAAM,IAAIC,EAAAA,IAAI,OAAQ,CACxBhC,KAAAA,EACAiC,OAAQ,QACRC,OAAQ,OACRC,YAAa,SAEfJ,EAAIK,SACJ,IAAIC,EAAI,EACJC,EAAQ3B,aAAY,WACjB,KAAO0B,IAAO,OACjBE,QAAQC,IAAI,2BACZ5B,cAAc0B,IAEhBtC,EAAKyC,KAAK,CAAExC,KAAK,GAAD,OAAK,KAAOoC,EAAZ,WAAmBnC,MAAuB,IAAhBwC,KAAKC,WAC/CZ,EAAIlB,WAAWb,GACfqC,MACC,OAEF,KAGD,4BAEE,gBAAKlB,MAAO,CAAEyB,OAA6B,GAArBC,OAAOC,aAAqBC,GAAG,UAGrD,SAAC5C,EAAD","sources":["pages/orderManage/orderList.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { Bar } from '@antv/g2plot';\nimport { Gauge } from '@ant-design/plots';\nlet data = [\n  { year: '1951 年', sales: 38 },\n  { year: '1952 年', sales: 52 },\n  { year: '1956 年', sales: 61 },\n  { year: '1957 年', sales: 145 },\n  { year: '1958 年', sales: 48 },\n]\nfunction OrderList() {\n  useEffect(() => {\n    let bar = new Bar('hihi', {\n      data,\n      xField: 'sales',\n      yField: 'year',\n      seriesField: 'year',\n    });\n    bar.render()\n    let i = 1;\n    let timer = setInterval(() => {\n      if ((1958 + i) === 1968) {\n        console.log('清除clear timer')\n        clearInterval(timer)\n      }\n      data.push({ year: `${1958 + i} 年`, sales: Math.random() * 100 })\n      bar.changeData(data)\n      i++;\n    }, 2000);\n\n  }, [])\n\n  return (\n    <div>\n      {/* <p>订单页面</p> */}\n      <div style={{ height: window.innerHeight * 0.5 }} id=\"hihi\">\n\n      </div>\n      <DemoGauge />\n    </div>\n  );\n}\n\nconst DemoGauge = () => {\n  const ticks = [0, 1 / 3, 2 / 3, 1];\n  const color = ['#F4664A', '#FAAD14', '#30BF78'];\n  const graphRef = useRef(null);\n  useEffect(() => {\n    if (graphRef.current) {\n      let data = 0.7;\n      const interval = setInterval(() => {\n        if (data >= 1.5) {\n          clearInterval(interval);\n        }\n\n        data += 0.005;\n        graphRef.current.changeData(data > 1 ? data - 1 : data);\n      }, 100);\n    }\n  }, [graphRef]);\n  const config = {\n    percent: 0,\n    range: {\n      ticks: [0, 1],\n      color: ['l(0) 0:#F4664A 0.5:#FAAD14 1:#30BF78'],\n    },\n    indicator: {\n      pointer: {\n        style: {\n          stroke: '#D0D0D0',\n        },\n      },\n      pin: {\n        style: {\n          stroke: '#D0D0D0',\n        },\n      },\n    },\n    statistic: {\n      title: {\n        formatter: ({ percent }) => {\n          if (percent < ticks[1]) {\n            return '差';\n          }\n\n          if (percent < ticks[2]) {\n            return '中';\n          }\n\n          return '优';\n        },\n        style: ({ percent }) => {\n          return {\n            fontSize: '36px',\n            lineHeight: 1,\n            color: percent < ticks[1] ? color[0] : percent < ticks[2] ? color[1] : color[2],\n          };\n        },\n      },\n      content: {\n        offsetY: 36,\n        style: {\n          fontSize: '24px',\n          color: '#4B535E',\n        },\n        formatter: () => '系统表现',\n      },\n    },\n    onReady: (plot) => {\n      graphRef.current = plot;\n    },\n  };\n\n  return <Gauge {...config} />;\n};\n\nexport default OrderList;\n"],"names":["data","year","sales","DemoGauge","ticks","color","graphRef","useRef","useEffect","current","interval","setInterval","clearInterval","changeData","config","percent","range","indicator","pointer","style","stroke","pin","statistic","title","formatter","fontSize","lineHeight","content","offsetY","onReady","plot","bar","Bar","xField","yField","seriesField","render","i","timer","console","log","push","Math","random","height","window","innerHeight","id"],"sourceRoot":""}